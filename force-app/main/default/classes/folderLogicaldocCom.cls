//Generated by wsdl2apex

public class folderLogicaldocCom {
    public class getGrantedUsersResponse {
        public folderLogicaldocCom.WSRight[] return_x;
        private String[] return_x_type_info = new String[]{'return','http://ws.logicaldoc.com',null,'0','-1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'return_x'};
    }
    public class getGrantedGroupsResponse {
        public folderLogicaldocCom.WSRight[] return_x;
        private String[] return_x_type_info = new String[]{'return','http://ws.logicaldoc.com',null,'0','-1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'return_x'};
    }
    public class getPathResponse {
        public folderLogicaldocCom.WSFolder[] folders;
        private String[] folders_type_info = new String[]{'folders','http://ws.logicaldoc.com',null,'0','-1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'folders'};
    }
    
    public class WSFolder {
        public folderLogicaldocCom.WSAttribute[] attributes;
        public String creation;
        public String creator;
        public String description;
        public Long foldRef;
        public Integer hidden;
        public Long id;
        public String lastModified;
        public String name;
        public Long parentId;
        public Integer position;
        public Integer storage;
        public String[] tags;
        public Long templateId;
        public Integer templateLocked;
        public Integer type_x;
        private String[] attributes_type_info = new String[]{'attributes','http://ws.logicaldoc.com',null,'0','-1','true'};
        private String[] creation_type_info = new String[]{'creation','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] creator_type_info = new String[]{'creator','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] description_type_info = new String[]{'description','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] foldRef_type_info = new String[]{'foldRef','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] hidden_type_info = new String[]{'hidden','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] id_type_info = new String[]{'id','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] lastModified_type_info = new String[]{'lastModified','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] name_type_info = new String[]{'name','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] parentId_type_info = new String[]{'parentId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] position_type_info = new String[]{'position','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] storage_type_info = new String[]{'storage','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] tags_type_info = new String[]{'tags','http://ws.logicaldoc.com',null,'0','-1','true'};
        private String[] templateId_type_info = new String[]{'templateId','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] templateLocked_type_info = new String[]{'templateLocked','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] type_x_type_info = new String[]{'type','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'attributes','creation','creator','description','foldRef','hidden','id','lastModified','name','parentId','position','storage','tags','templateId','templateLocked','type_x'};
    }
    public class moveResponse {
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{};
    }
    
    public class findByPathResponse {
        public folderLogicaldocCom.WSFolder folder;
        private String[] folder_type_info = new String[]{'folder','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'folder'};
    }
    public class getFolder {
        public String sid;
        public Long folderId;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folderId_type_info = new String[]{'folderId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folderId'};
    }
    public class isReadableResponse {
        public Boolean return_x;
        private String[] return_x_type_info = new String[]{'return','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'return_x'};
    }
    public class grantGroup {
        public String sid;
        public Long folderId;
        public Long groupId;
        public Integer permissions;
        public Boolean recursive;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folderId_type_info = new String[]{'folderId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] groupId_type_info = new String[]{'groupId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] permissions_type_info = new String[]{'permissions','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] recursive_type_info = new String[]{'recursive','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folderId','groupId','permissions','recursive'};
    }
    public class isGranted {
        public String sid;
        public Long folderId;
        public Integer permission;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folderId_type_info = new String[]{'folderId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] permission_type_info = new String[]{'permission','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folderId','permission'};
    }
    
    public class getPath {
        public String sid;
        public Long folderId;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folderId_type_info = new String[]{'folderId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folderId'};
    }
    public class create {
        public String sid;
        public folderLogicaldocCom.WSFolder folder;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folder_type_info = new String[]{'folder','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folder'};
    }
    public class createFolder {
        public String sid;
        public Long parentId;
        public String name;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] parentId_type_info = new String[]{'parentId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] name_type_info = new String[]{'name','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','parentId','name'};
    }
    public class isGrantedResponse {
        public Boolean return_x;
        private String[] return_x_type_info = new String[]{'return','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'return_x'};
    }
    public class createFolderResponse {
        public Long folderId;
        private String[] folderId_type_info = new String[]{'folderId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'folderId'};
    }
    public class getRootFolderResponse {
        public folderLogicaldocCom.WSFolder folder;
        private String[] folder_type_info = new String[]{'folder','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'folder'};
    }
    public class createAliasResponse {
        public folderLogicaldocCom.WSFolder folder;
        private String[] folder_type_info = new String[]{'folder','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'folder'};
    }
    public class isWriteableResponse {
        public Boolean return_x;
        private String[] return_x_type_info = new String[]{'return','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'return_x'};
    }
    public class getDefaultWorkspaceResponse {
        public folderLogicaldocCom.WSFolder workspace;
        private String[] workspace_type_info = new String[]{'workspace','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'workspace'};
    }
    public class getDefaultWorkspace {
        public String sid;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid'};
    }
    public class grantUserResponse {
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{};
    }
    public class copyResponse {
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{};
    }
    public class WSRight {
        public Long id;
        public Integer permissions;
        private String[] id_type_info = new String[]{'id','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] permissions_type_info = new String[]{'permissions','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'id','permissions'};
    }
    public class grantGroupResponse {
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{};
    }
    public class isReadable {
        public String sid;
        public Long folderId;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folderId_type_info = new String[]{'folderId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folderId'};
    }
    public class updateResponse {
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{};
    }
    public class getRootFolder {
        public String sid;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid'};
    }
    public class listChildren {
        public String sid;
        public Long folderId;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folderId_type_info = new String[]{'folderId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folderId'};
    }
    public class findByPath {
        public String sid;
        public String path;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] path_type_info = new String[]{'path','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','path'};
    }
    public class listWorkspaces {
        public String sid;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid'};
    }
    public class update_x {
        public String sid;
        public folderLogicaldocCom.WSFolder folder;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folder_type_info = new String[]{'folder','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folder'};
    }
    public class grantUser {
        public String sid;
        public Long folderId;
        public Long userId;
        public Integer permissions;
        public Boolean recursive;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folderId_type_info = new String[]{'folderId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] userId_type_info = new String[]{'userId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] permissions_type_info = new String[]{'permissions','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] recursive_type_info = new String[]{'recursive','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folderId','userId','permissions','recursive'};
    }
    public class delete_x {
        public String sid;
        public Long folderId;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folderId_type_info = new String[]{'folderId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folderId'};
    }
    public class deleteResponse {
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{};
    }
    
    public class getFolderResponse {
        public folderLogicaldocCom.WSFolder folder;
        private String[] folder_type_info = new String[]{'folder','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'folder'};
    }
    public class renameResponse {
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{};
    }
    public class copy {
        public String sid;
        public Long folderId;
        public Long targetId;
        public Integer foldersOnly;
        public Integer inheritSecurity;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folderId_type_info = new String[]{'folderId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] targetId_type_info = new String[]{'targetId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] foldersOnly_type_info = new String[]{'foldersOnly','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] inheritSecurity_type_info = new String[]{'inheritSecurity','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folderId','targetId','foldersOnly','inheritSecurity'};
    }
    public class createPath {
        public String sid;
        public Long parentId;
        public String path;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] parentId_type_info = new String[]{'parentId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] path_type_info = new String[]{'path','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','parentId','path'};
    }
    public class createAlias {
        public String sid;
        public Long arg1;
        public Long arg2;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] arg1_type_info = new String[]{'arg1','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] arg2_type_info = new String[]{'arg2','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','arg1','arg2'};
    }
    public class isWriteable {
        public String sid;
        public Long folderId;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folderId_type_info = new String[]{'folderId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folderId'};
    }
    public class move {
        public String sid;
        public Long folderId;
        public Long parentId;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folderId_type_info = new String[]{'folderId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] parentId_type_info = new String[]{'parentId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folderId','parentId'};
    }
    public class WSAttribute {
        public String dateValue;
        public Double doubleValue;
        public Integer editor;
        public Long intValue;
        public String label;
        public Integer mandatory;
        public String name;
        public Integer position;
        public Long setId;
        public String stringValue;
        public Integer type_x;
        public String value;
        private String[] dateValue_type_info = new String[]{'dateValue','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] doubleValue_type_info = new String[]{'doubleValue','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] editor_type_info = new String[]{'editor','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] intValue_type_info = new String[]{'intValue','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] label_type_info = new String[]{'label','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] mandatory_type_info = new String[]{'mandatory','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] name_type_info = new String[]{'name','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] position_type_info = new String[]{'position','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] setId_type_info = new String[]{'setId','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] stringValue_type_info = new String[]{'stringValue','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] type_x_type_info = new String[]{'type','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] value_type_info = new String[]{'value','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'dateValue','doubleValue','editor','intValue','label','mandatory','name','position','setId','stringValue','type_x','value'};
    }
    public class createPathResponse {
        public folderLogicaldocCom.WSFolder folder;
        private String[] folder_type_info = new String[]{'folder','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'folder'};
    }
    public class getGrantedUsers {
        public String sid;
        public Long folderId;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folderId_type_info = new String[]{'folderId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folderId'};
    }
    public class createResponse {
        public folderLogicaldocCom.WSFolder folder;
        private String[] folder_type_info = new String[]{'folder','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'folder'};
    }
    public class getGrantedGroups {
        public String sid;
        public Long folderId;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folderId_type_info = new String[]{'folderId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folderId'};
    }
    public class Exception_x {
        public String message;
        private String[] message_type_info = new String[]{'message','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'message'};
    }
    public class listWorkspacesResponse {
        public folderLogicaldocCom.WSFolder[] workspaces;
        private String[] workspaces_type_info = new String[]{'workspaces','http://ws.logicaldoc.com',null,'0','-1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'workspaces'};
    }
    public class rename {
        public String sid;
        public Long folderId;
        public String name;
        private String[] sid_type_info = new String[]{'sid','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] folderId_type_info = new String[]{'folderId','http://ws.logicaldoc.com',null,'1','1','false'};
        private String[] name_type_info = new String[]{'name','http://ws.logicaldoc.com',null,'0','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'sid','folderId','name'};
    }
    public class listChildrenResponse {
        public folderLogicaldocCom.WSFolder[] folder;
        private String[] folder_type_info = new String[]{'folder','http://ws.logicaldoc.com',null,'0','-1','false'};
        private String[] apex_schema_type_info = new String[]{'http://ws.logicaldoc.com','false','false'};
        private String[] field_order_type_info = new String[]{'folder'};
    }
    public class SoapFolderServicePort {
        //public String endpoint_x = 'http://stgmhlogicdoc.martindale.com/services/Folder';
        public String endpoint_x = system.label.logicaldoc_url +'/services/Folder';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://ws.logicaldoc.com', 'folderLogicaldocCom'};
        public void move(String sid,Long folderId,Long parentId) {
            folderLogicaldocCom.move request_x = new folderLogicaldocCom.move();
            request_x.sid = sid;
            request_x.folderId = folderId;
            request_x.parentId = parentId;
            folderLogicaldocCom.moveResponse response_x;
            Map<String, folderLogicaldocCom.moveResponse> response_map_x = new Map<String, folderLogicaldocCom.moveResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'move',
              'http://ws.logicaldoc.com',
              'moveResponse',
              'folderLogicaldocCom.moveResponse'}
            );
            response_x = response_map_x.get('response_x');
        }
        public folderLogicaldocCom.WSFolder findByPath(String sid,String path) {
            folderLogicaldocCom.findByPath request_x = new folderLogicaldocCom.findByPath();
            request_x.sid = sid;
            request_x.path = path;
            folderLogicaldocCom.findByPathResponse response_x;
            Map<String, folderLogicaldocCom.findByPathResponse> response_map_x = new Map<String, folderLogicaldocCom.findByPathResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'findByPath',
              'http://ws.logicaldoc.com',
              'findByPathResponse',
              'folderLogicaldocCom.findByPathResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.folder;
        }
        public folderLogicaldocCom.WSRight[] getGrantedUsers(String sid,Long folderId) {
            folderLogicaldocCom.getGrantedUsers request_x = new folderLogicaldocCom.getGrantedUsers();
            request_x.sid = sid;
            request_x.folderId = folderId;
            folderLogicaldocCom.getGrantedUsersResponse response_x;
            Map<String, folderLogicaldocCom.getGrantedUsersResponse> response_map_x = new Map<String, folderLogicaldocCom.getGrantedUsersResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'getGrantedUsers',
              'http://ws.logicaldoc.com',
              'getGrantedUsersResponse',
              'folderLogicaldocCom.getGrantedUsersResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.return_x;
        }
        
        public folderLogicaldocCom.WSFolder[] listWorkspaces(String sid) {
            folderLogicaldocCom.listWorkspaces request_x = new folderLogicaldocCom.listWorkspaces();
            request_x.sid = sid;
            folderLogicaldocCom.listWorkspacesResponse response_x;
            Map<String, folderLogicaldocCom.listWorkspacesResponse> response_map_x = new Map<String, folderLogicaldocCom.listWorkspacesResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'listWorkspaces',
              'http://ws.logicaldoc.com',
              'listWorkspacesResponse',
              'folderLogicaldocCom.listWorkspacesResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.workspaces;
        }
        
        public void update_x(String sid,folderLogicaldocCom.WSFolder folder) {
            folderLogicaldocCom.update_x request_x = new folderLogicaldocCom.update_x();
            request_x.sid = sid;
            request_x.folder = folder;
            folderLogicaldocCom.updateResponse response_x;
            Map<String, folderLogicaldocCom.updateResponse> response_map_x = new Map<String, folderLogicaldocCom.updateResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'update',
              'http://ws.logicaldoc.com',
              'updateResponse',
              'folderLogicaldocCom.updateResponse'}
            );
            response_x = response_map_x.get('response_x');
        }
        public void grantUser(String sid,Long folderId,Long userId,Integer permissions,Boolean recursive) {
            folderLogicaldocCom.grantUser request_x = new folderLogicaldocCom.grantUser();
            request_x.sid = sid;
            request_x.folderId = folderId;
            request_x.userId = userId;
            request_x.permissions = permissions;
            request_x.recursive = recursive;
            folderLogicaldocCom.grantUserResponse response_x;
            Map<String, folderLogicaldocCom.grantUserResponse> response_map_x = new Map<String, folderLogicaldocCom.grantUserResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'grantUser',
              'http://ws.logicaldoc.com',
              'grantUserResponse',
              'folderLogicaldocCom.grantUserResponse'}
            );
            response_x = response_map_x.get('response_x');
        }
        public void delete_x(String sid,Long folderId) {
            folderLogicaldocCom.delete_x request_x = new folderLogicaldocCom.delete_x();
            request_x.sid = sid;
            request_x.folderId = folderId;
            folderLogicaldocCom.deleteResponse response_x;
            Map<String, folderLogicaldocCom.deleteResponse> response_map_x = new Map<String, folderLogicaldocCom.deleteResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'delete',
              'http://ws.logicaldoc.com',
              'deleteResponse',
              'folderLogicaldocCom.deleteResponse'}
            );
            response_x = response_map_x.get('response_x');
        }
        public folderLogicaldocCom.WSRight[] getGrantedGroups(String sid,Long folderId) {
            folderLogicaldocCom.getGrantedGroups request_x = new folderLogicaldocCom.getGrantedGroups();
            request_x.sid = sid;
            request_x.folderId = folderId;
            folderLogicaldocCom.getGrantedGroupsResponse response_x;
            Map<String, folderLogicaldocCom.getGrantedGroupsResponse> response_map_x = new Map<String, folderLogicaldocCom.getGrantedGroupsResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'getGrantedGroups',
              'http://ws.logicaldoc.com',
              'getGrantedGroupsResponse',
              'folderLogicaldocCom.getGrantedGroupsResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.return_x;
        }
       
        public folderLogicaldocCom.WSFolder getDefaultWorkspace(String sid) {
            folderLogicaldocCom.getDefaultWorkspace request_x = new folderLogicaldocCom.getDefaultWorkspace();
            request_x.sid = sid;
            folderLogicaldocCom.getDefaultWorkspaceResponse response_x;
            Map<String, folderLogicaldocCom.getDefaultWorkspaceResponse> response_map_x = new Map<String, folderLogicaldocCom.getDefaultWorkspaceResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'getDefaultWorkspace',
              'http://ws.logicaldoc.com',
              'getDefaultWorkspaceResponse',
              'folderLogicaldocCom.getDefaultWorkspaceResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.workspace;
        }
        public folderLogicaldocCom.WSFolder getFolder(String sid,Long folderId) {
            folderLogicaldocCom.getFolder request_x = new folderLogicaldocCom.getFolder();
            request_x.sid = sid;
            request_x.folderId = folderId;
            folderLogicaldocCom.getFolderResponse response_x;
            Map<String, folderLogicaldocCom.getFolderResponse> response_map_x = new Map<String, folderLogicaldocCom.getFolderResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'getFolder',
              'http://ws.logicaldoc.com',
              'getFolderResponse',
              'folderLogicaldocCom.getFolderResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.folder;
        }
        public void rename(String sid,Long folderId,String name) {
            folderLogicaldocCom.rename request_x = new folderLogicaldocCom.rename();
            request_x.sid = sid;
            request_x.folderId = folderId;
            request_x.name = name;
            folderLogicaldocCom.renameResponse response_x;
            Map<String, folderLogicaldocCom.renameResponse> response_map_x = new Map<String, folderLogicaldocCom.renameResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'rename',
              'http://ws.logicaldoc.com',
              'renameResponse',
              'folderLogicaldocCom.renameResponse'}
            );
            response_x = response_map_x.get('response_x');
        }
        public void grantGroup(String sid,Long folderId,Long groupId,Integer permissions,Boolean recursive) {
            folderLogicaldocCom.grantGroup request_x = new folderLogicaldocCom.grantGroup();
            request_x.sid = sid;
            request_x.folderId = folderId;
            request_x.groupId = groupId;
            request_x.permissions = permissions;
            request_x.recursive = recursive;
            folderLogicaldocCom.grantGroupResponse response_x;
            Map<String, folderLogicaldocCom.grantGroupResponse> response_map_x = new Map<String, folderLogicaldocCom.grantGroupResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'grantGroup',
              'http://ws.logicaldoc.com',
              'grantGroupResponse',
              'folderLogicaldocCom.grantGroupResponse'}
            );
            response_x = response_map_x.get('response_x');
        }
        public Boolean isGranted(String sid,Long folderId,Integer permission) {
            folderLogicaldocCom.isGranted request_x = new folderLogicaldocCom.isGranted();
            request_x.sid = sid;
            request_x.folderId = folderId;
            request_x.permission = permission;
            folderLogicaldocCom.isGrantedResponse response_x;
            Map<String, folderLogicaldocCom.isGrantedResponse> response_map_x = new Map<String, folderLogicaldocCom.isGrantedResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'isGranted',
              'http://ws.logicaldoc.com',
              'isGrantedResponse',
              'folderLogicaldocCom.isGrantedResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.return_x;
        }
        public folderLogicaldocCom.WSFolder[] getPath(String sid,Long folderId) {
            folderLogicaldocCom.getPath request_x = new folderLogicaldocCom.getPath();
            request_x.sid = sid;
            request_x.folderId = folderId;
            folderLogicaldocCom.getPathResponse response_x;
            Map<String, folderLogicaldocCom.getPathResponse> response_map_x = new Map<String, folderLogicaldocCom.getPathResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'getPath',
              'http://ws.logicaldoc.com',
              'getPathResponse',
              'folderLogicaldocCom.getPathResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.folders;
        }
        
        public folderLogicaldocCom.WSFolder create(String sid,folderLogicaldocCom.WSFolder folder) {
            folderLogicaldocCom.create request_x = new folderLogicaldocCom.create();
            request_x.sid = sid;
            request_x.folder = folder;
            folderLogicaldocCom.createResponse response_x;
            Map<String, folderLogicaldocCom.createResponse> response_map_x = new Map<String, folderLogicaldocCom.createResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'create',
              'http://ws.logicaldoc.com',
              'createResponse',
              'folderLogicaldocCom.createResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.folder;
        }
        public void copy(String sid,Long folderId,Long targetId,Integer foldersOnly,Integer inheritSecurity) {
            folderLogicaldocCom.copy request_x = new folderLogicaldocCom.copy();
            request_x.sid = sid;
            request_x.folderId = folderId;
            request_x.targetId = targetId;
            request_x.foldersOnly = foldersOnly;
            request_x.inheritSecurity = inheritSecurity;
            folderLogicaldocCom.copyResponse response_x;
            Map<String, folderLogicaldocCom.copyResponse> response_map_x = new Map<String, folderLogicaldocCom.copyResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'copy',
              'http://ws.logicaldoc.com',
              'copyResponse',
              'folderLogicaldocCom.copyResponse'}
            );
            response_x = response_map_x.get('response_x');
        }
        public Long createFolder(String sid,Long parentId,String name) {
            folderLogicaldocCom.createFolder request_x = new folderLogicaldocCom.createFolder();
            request_x.sid = sid;
            request_x.parentId = parentId;
            request_x.name = name;
            folderLogicaldocCom.createFolderResponse response_x;
            Map<String, folderLogicaldocCom.createFolderResponse> response_map_x = new Map<String, folderLogicaldocCom.createFolderResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'createFolder',
              'http://ws.logicaldoc.com',
              'createFolderResponse',
              'folderLogicaldocCom.createFolderResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.folderId;
        }
        public folderLogicaldocCom.WSFolder createPath(String sid,Long parentId,String path) {
            folderLogicaldocCom.createPath request_x = new folderLogicaldocCom.createPath();
            request_x.sid = sid;
            request_x.parentId = parentId;
            request_x.path = path;
            folderLogicaldocCom.createPathResponse response_x;
            Map<String, folderLogicaldocCom.createPathResponse> response_map_x = new Map<String, folderLogicaldocCom.createPathResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'createPath',
              'http://ws.logicaldoc.com',
              'createPathResponse',
              'folderLogicaldocCom.createPathResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.folder;
        }
        public Boolean isReadable(String sid,Long folderId) {
            folderLogicaldocCom.isReadable request_x = new folderLogicaldocCom.isReadable();
            request_x.sid = sid;
            request_x.folderId = folderId;
            folderLogicaldocCom.isReadableResponse response_x;
            Map<String, folderLogicaldocCom.isReadableResponse> response_map_x = new Map<String, folderLogicaldocCom.isReadableResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'isReadable',
              'http://ws.logicaldoc.com',
              'isReadableResponse',
              'folderLogicaldocCom.isReadableResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.return_x;
        }
        public folderLogicaldocCom.WSFolder createAlias(String sid,Long arg1,Long arg2) {
            folderLogicaldocCom.createAlias request_x = new folderLogicaldocCom.createAlias();
            request_x.sid = sid;
            request_x.arg1 = arg1;
            request_x.arg2 = arg2;
            folderLogicaldocCom.createAliasResponse response_x;
            Map<String, folderLogicaldocCom.createAliasResponse> response_map_x = new Map<String, folderLogicaldocCom.createAliasResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'createAlias',
              'http://ws.logicaldoc.com',
              'createAliasResponse',
              'folderLogicaldocCom.createAliasResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.folder;
        }
        public folderLogicaldocCom.WSFolder getRootFolder(String sid) {
            folderLogicaldocCom.getRootFolder request_x = new folderLogicaldocCom.getRootFolder();
            request_x.sid = sid;
            folderLogicaldocCom.getRootFolderResponse response_x;
            Map<String, folderLogicaldocCom.getRootFolderResponse> response_map_x = new Map<String, folderLogicaldocCom.getRootFolderResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'getRootFolder',
              'http://ws.logicaldoc.com',
              'getRootFolderResponse',
              'folderLogicaldocCom.getRootFolderResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.folder;
        }
        public folderLogicaldocCom.WSFolder[] listChildren(String sid,Long folderId) {
            folderLogicaldocCom.listChildren request_x = new folderLogicaldocCom.listChildren();
            request_x.sid = sid;
            request_x.folderId = folderId;
            folderLogicaldocCom.listChildrenResponse response_x;
            Map<String, folderLogicaldocCom.listChildrenResponse> response_map_x = new Map<String, folderLogicaldocCom.listChildrenResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'listChildren',
              'http://ws.logicaldoc.com',
              'listChildrenResponse',
              'folderLogicaldocCom.listChildrenResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.folder;
        }
        public Boolean isWriteable(String sid,Long folderId) {
            folderLogicaldocCom.isWriteable request_x = new folderLogicaldocCom.isWriteable();
            request_x.sid = sid;
            request_x.folderId = folderId;
            folderLogicaldocCom.isWriteableResponse response_x;
            Map<String, folderLogicaldocCom.isWriteableResponse> response_map_x = new Map<String, folderLogicaldocCom.isWriteableResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://ws.logicaldoc.com',
              'isWriteable',
              'http://ws.logicaldoc.com',
              'isWriteableResponse',
              'folderLogicaldocCom.isWriteableResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.return_x;
        }
    }
}